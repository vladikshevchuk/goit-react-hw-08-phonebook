{"version":3,"file":"static/js/201.dd09232c.chunk.js","mappings":"iOAEaA,EAAOC,EAAAA,GAAAA,KAAH,uHAQJC,EAAQD,EAAAA,GAAAA,MAAH,6FAMLE,EAAQF,EAAAA,GAAAA,MAAH,iNAWLG,EAASH,EAAAA,GAAAA,OAAH,6L,SCtBNI,EAAgB,WAC3B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MAEF,IAAK,SACHJ,EAAUI,GACV,MAEF,QACE,OAEL,EAYKC,EAAY,WAChBP,EAAQ,IACRE,EAAU,GACX,EAED,OACE,UAACZ,EAAD,YACE,UAACE,EAAD,mBAEE,SAACC,EAAD,CACEe,KAAK,OACLT,KAAK,OACLU,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRL,MAAOP,EACPa,SAAUT,QAGd,UAACX,EAAD,qBAEE,SAACC,EAAD,CACEe,KAAK,MACLT,KAAK,SACLU,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRL,MAAOL,EACPW,SAAUT,QAGd,SAACT,EAAD,CAAQc,KAAK,SAASK,QAzCL,SAAAT,GACnBA,EAAEU,iBAEF,IAAMC,EAAa,CAAEhB,KAAAA,EAAME,OAAAA,GAE3BL,GAASoB,EAAAA,EAAAA,IAAWD,IAEpBR,GACD,EAiCG,2BAKL,ECzEYU,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAAnB,EAIrBC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,ECFzBC,EAAiBhC,EAAAA,GAAAA,IAAH,qJASdiC,EAAOjC,EAAAA,GAAAA,EAAH,+DAKJG,EAASH,EAAAA,GAAAA,OAAH,kNCZNkC,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClB9B,GAAWC,EAAAA,EAAAA,MAGjB,OACE,UAAC0B,EAAD,YACE,UAACC,EAAD,WACGE,EAAQ3B,KADX,KACmB2B,EAAQzB,WAE3B,SAAC,EAAD,CAAQO,KAAK,SAASK,QAPL,kBAAMjB,GAAS+B,EAAAA,EAAAA,IAAcD,EAAQE,IAArC,EAOjB,sBAKL,EChBYC,EAAOtC,EAAAA,GAAAA,GAAH,8ICGJuC,EAAc,WACzB,IAAMX,GAAWY,EAAAA,EAAAA,IAAYV,GAE7B,OACE,SAACQ,EAAD,UACGV,EAASa,KAAI,SAACN,GAAD,OACZ,yBACE,SAACD,EAAD,CAASC,QAASA,KADXA,EAAQE,GADL,KAOnB,ECOD,EAjBiB,WACf,IAAMhC,GAAWC,EAAAA,EAAAA,MACXoC,GAAYF,EAAAA,EAAAA,IAAYd,GAM9B,OAJAiB,EAAAA,EAAAA,YAAU,WACRtC,GAASuC,EAAAA,EAAAA,MACV,GAAE,CAACvC,KAGF,iCACE,SAACD,EAAD,KACA,yBAAMsC,GAAa,4BACnB,SAACH,EAAD,MAGL,C","sources":["components/ContactEditor/ContactEditor.styled.js","components/ContactEditor/ContactEditor.jsx","redux/contacts/selectors.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-bottom: 12px;\n`;\n\nexport const Lable = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n\nexport const Input = styled.input`\n  flex-grow: 1;\n  padding: 8px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  font: inherit;\n  line-height: 16px;\n  letter-spacing: 0.01em;\n  resize: none;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  outline: none;\n  padding: 10px 10px;\n  border-radius: 4px;\n  background-color: #3f51b5;\n  color: #fff;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { Button, Form, Input, Lable } from './ContactEditor.styled';\n\nexport const ContactEditor = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = { name, number };\n\n    dispatch(addContact(newContact));\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form>\n      <Lable>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleInputChange}\n        />\n      </Lable>\n      <Lable>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleInputChange}\n        />\n      </Lable>\n      <Button type=\"submit\" onClick={handleSubmit}>\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;","import styled from \"styled-components\";\n\nexport const WrapperContact = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 4px;\n  border: 1px solid #2a2a2a;\n  border-radius: 4px;\n`;\n\nexport const Text = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  outline: none;\n  margin-left: auto;\n  border-radius: 4px;\n  padding: 8px 12px;\n  background-color: #3f51b5;\n  color: #fff;\n`;","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Button, Text, WrapperContact } from './Contact.styled';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <WrapperContact>\n      <Text>\n        {contact.name}: {contact.number}\n      </Text>\n      <Button type=\"button\" onClick={handleDelete}>\n        Delete\n      </Button>\n    </WrapperContact>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 12px;\n`;","import { useSelector } from 'react-redux';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { Contact } from 'components/Contact/Contact';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectAllContacts);\n\n  return (\n    <List>\n      {contacts.map((contact) => (\n        <li key={contact.id}>\n          <Contact contact={contact} />\n        </li>\n      ))}\n    </List>\n  );\n};\n","import { ContactEditor } from \"components/ContactEditor/ContactEditor\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectLoading } from \"redux/contacts/selectors\";\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;"],"names":["Form","styled","Lable","Input","Button","ContactEditor","dispatch","useDispatch","useState","name","setName","number","setNumber","handleInputChange","e","target","value","resetForm","type","pattern","title","required","onChange","onClick","preventDefault","newContact","addContact","selectLoading","state","contacts","loading","selectAllContacts","items","WrapperContact","Text","Contact","contact","deleteContact","id","List","ContactList","useSelector","map","isLoading","useEffect","fetchContacts"],"sourceRoot":""}