{"version":3,"file":"static/js/104.f47dd8c0.chunk.js","mappings":"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","sources":["components/ModalWindow/ModalWindow.jsx","components/ContactEditor/ContactEditor.jsx","redux/contacts/selectors.js","components/Contact/Contact.jsx","components/Find/FindNumberByName.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { useState } from 'react';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n} from '@chakra-ui/react';\n\nexport const ModalWindow = ({ isOpen, onClose, getContact, contact }) => {\n  const [name, setName] = useState(contact?.name ?? '');\n  const [number, setNumber] = useState(contact?.number ?? '');\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = { name, number };\n\n    getContact( e , newContact);\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Create your account</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody pb={6}>\n          <FormControl>\n            <FormLabel>Name</FormLabel>\n            <Input\n              placeholder=\"Name\"\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              value={name}\n              onChange={handleInputChange}\n            />\n          </FormControl>\n\n          <FormControl mt={4}>\n            <FormLabel>Number</FormLabel>\n            <Input\n              placeholder=\"Number\"\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              value={number}\n              onChange={handleInputChange}\n            />\n          </FormControl>\n        </ModalBody>\n\n        <ModalFooter>\n          <Button colorScheme=\"blue\" mr={3} onClick={handleSubmit}>\n            Save\n          </Button>\n          <Button onClick={onClose}>Cancel</Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { useDisclosure } from '@chakra-ui/react';\nimport { ModalWindow } from 'components/ModalWindow/ModalWindow';\nimport { Button } from '@chakra-ui/react';\n\nexport const ContactEditor = () => {\n  const dispatch = useDispatch();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const getContact = (e, newContact) => {\n    e.preventDefault();\n\n    dispatch(addContact(newContact));\n\n    onClose();\n  };\n\n  return (\n    <>\n      <Button type=\"button\" onClick={onOpen} colorScheme=\"blue\">\n        Add contact\n      </Button>\n      <ModalWindow isOpen={isOpen} onClose={onClose} getContact={getContact} />\n    </>\n  );\n};\n","export const selectLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;","import { useDisclosure } from '@chakra-ui/react';\nimport { ModalWindow } from 'components/ModalWindow/ModalWindow';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact, updateContact } from 'redux/contacts/operations';\nimport { Box, Text, Button } from '@chakra-ui/react';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const getContact = (e, editedContact) => {\n    e.preventDefault();\n    const { name, number } = editedContact;\n\n    dispatch(updateContact({id: contact.id, name, number}));\n\n    onClose();\n  };\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      gap=\"8px\"\n      padding=\"4px\"\n      pl=\"16px\"\n      border=\"1px\"\n      borderColor=\"#2a2a2a\"\n      borderRadius=\"4px\"\n    >\n      <Text>\n        {contact.name}: {contact.number}\n      </Text>\n      <Box>\n        <Button onClick={onOpen} colorScheme=\"blue\" mr=\"10px\">\n        Edit\n      </Button>\n      <Button type=\"button\" onClick={handleDelete} colorScheme=\"blue\">\n        Delete\n      </Button>\n      </Box>\n      <ModalWindow\n        isOpen={isOpen}\n        onClose={onClose}\n        getContact={getContact}\n        contact={contact}\n      />\n    </Box>\n  );\n};\n","import { FormControl, FormLabel, Input } from '@chakra-ui/react';\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/filterSlice';\n\nexport const FindNumberByName = () => {\n  const dispatch = useDispatch();\n\n  const handleFindNumber = e => {\n    dispatch(filterContact(e.target.value));\n  };\n\n  return (\n    <FormControl mt=\"16px\">\n      <FormLabel>Find number by name</FormLabel>\n      <Input type=\"text\" onChange={handleFindNumber} />\n    </FormControl>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectAllContacts} from 'redux/contacts/selectors';\nimport { Contact } from 'components/Contact/Contact';\nimport { List, ListItem } from '@chakra-ui/react';\nimport { FindNumberByName } from 'components/Find/FindNumberByName';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectAllContacts);\n  const state = useSelector(state => state.filter);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = state.filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <>\n      <FindNumberByName />\n      {contacts.length > 0 && \n      <List mt=\"16px\" display=\"grid\" gridTemplateColumns=\"1fr\" gridGap=\"12px\">\n        {getVisibleContacts().map(contact => (\n          <ListItem key={contact.id}>\n            <Contact contact={contact} />\n          </ListItem>\n        ))}\n      </List>}\n    </>\n  );\n};\n","import { ContactEditor } from \"components/ContactEditor/ContactEditor\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectLoading } from \"redux/contacts/selectors\";\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;"],"names":["ModalWindow","isOpen","onClose","getContact","contact","useState","name","setName","number","setNumber","handleInputChange","e","target","value","resetForm","pb","I","placeholder","type","pattern","title","required","onChange","mt","colorScheme","mr","onClick","preventDefault","ContactEditor","dispatch","useDispatch","useDisclosure","onOpen","newContact","addContact","selectLoading","state","contacts","isLoading","selectAllContacts","items","Contact","display","justifyContent","alignItems","gap","padding","pl","border","borderColor","borderRadius","deleteContact","id","editedContact","updateContact","FindNumberByName","filterContact","ContactList","useSelector","filter","length","gridTemplateColumns","gridGap","normalizedFilter","toLowerCase","includes","getVisibleContacts","map","useEffect","fetchContacts"],"sourceRoot":""}