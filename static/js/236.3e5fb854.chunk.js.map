{"version":3,"file":"static/js/236.3e5fb854.chunk.js","mappings":"qPAKMA,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGCC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAgBjB,OACE,SAAC,KAAD,CAAQN,cAAeA,EAAeO,SAfnB,SAACC,EAAQC,GAC5B,IAAQR,EAA0BO,EAA1BP,KAAMC,EAAoBM,EAApBN,MAAOC,EAAaK,EAAbL,SAErBE,GACEK,EAAAA,EAAAA,IAAS,CACPT,KAAAA,EACAC,MAAAA,EACAC,SAAAA,KAIJM,EAAQE,WACT,EAGC,SACG,SAAAC,GAAK,OACJ,UAAC,KAAD,YACE,SAAC,KAAD,CAAOX,KAAK,OAAZ,SACG,gBAAGY,EAAH,EAAGA,MAAH,OACC,UAAC,KAAD,YACE,SAAC,IAAD,wBACA,SAAC,EAAAC,GAAD,kBAAWD,GAAX,IAAkBE,KAAK,OAAOd,KAAK,YAHtC,KAOH,SAAC,KAAD,CAAOA,KAAK,QAAZ,SACG,gBAAGY,EAAH,EAAGA,MAAH,OACC,UAAC,KAAD,CAAaG,GAAI,EAAjB,WACE,SAAC,IAAD,qBACA,SAAC,EAAAF,GAAD,kBAAWD,GAAX,IAAkBE,KAAK,QAAQd,KAAK,aAHvC,KAOH,SAAC,KAAD,CAAOA,KAAK,WAAZ,SACG,gBAAGY,EAAH,EAAGA,MAAH,OACC,UAAC,KAAD,CAAaG,GAAI,EAAjB,WACE,SAAC,IAAD,wBACA,SAAC,EAAAF,GAAD,kBAAWD,GAAX,IAAkBE,KAAK,WAAWd,KAAK,gBAH1C,KAOH,SAAC,IAAD,CACEe,GAAI,EACJC,YAAY,OACZC,UAAWN,EAAMO,aACjBJ,KAAK,SAJP,sBA1BE,GAsCX,EC1DD,EARiB,WACb,OACI,0BACI,SAACX,EAAD,KAGX,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Input, Button, FormControl, FormLabel } from '@chakra-ui/react';\nimport { Formik, Form, Field } from 'formik';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    const { name, email, password } = values;\n\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n      })\n    );\n\n    actions.resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      {props => (\n        <Form>\n          <Field name=\"name\">\n            {({ field }) => (\n              <FormControl>\n                <FormLabel>Username</FormLabel>\n                <Input {...field} type=\"text\" name=\"name\" />\n              </FormControl>\n            )}\n          </Field>\n          <Field name=\"email\">\n            {({ field }) => (\n              <FormControl mt={4}>\n                <FormLabel>Email</FormLabel>\n                <Input {...field} type=\"email\" name=\"email\" />\n              </FormControl>\n            )}\n          </Field>\n          <Field name=\"password\">\n            {({ field }) => (\n              <FormControl mt={4}>\n                <FormLabel>Password</FormLabel>\n                <Input {...field} type=\"password\" name=\"password\" />\n              </FormControl>\n            )}\n          </Field>\n          <Button\n            mt={4}\n            colorScheme=\"blue\"\n            isLoading={props.isSubmitting}\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import { RegisterForm } from \"components/RegisterForm/RegisterForm\"\n\nconst Register = () => {\n    return (\n        <div>\n            <RegisterForm />\n        </div>\n    )\n}\n\nexport default Register;"],"names":["initialValues","name","email","password","RegisterForm","dispatch","useDispatch","onSubmit","values","actions","register","resetForm","props","field","I","type","mt","colorScheme","isLoading","isSubmitting"],"sourceRoot":""}