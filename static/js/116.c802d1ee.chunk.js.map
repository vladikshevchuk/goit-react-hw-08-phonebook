{"version":3,"file":"static/js/116.c802d1ee.chunk.js","mappings":"qVAeaA,EAAc,SAAC,GAA8C,IAAD,IAA3CC,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QACzD,GAAwBC,EAAAA,EAAAA,UAAQ,iBAACD,QAAD,IAACA,OAAD,EAACA,EAASE,YAAV,QAAkB,IAAlD,eAAOA,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAQ,iBAACD,QAAD,IAACA,OAAD,EAACA,EAASI,cAAV,QAAoB,IAAxD,eAAOA,EAAP,KAAeC,EAAf,KAEMC,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MAEF,IAAK,SACHJ,EAAUI,GACV,MAEF,QACE,OAEL,EAYKC,EAAY,WAChBP,EAAQ,IACRE,EAAU,GACX,EAED,OACE,UAAC,KAAD,CAAOR,OAAQA,EAAQC,QAASA,EAAhC,WACE,SAAC,IAAD,KACA,UAAC,IAAD,YACE,SAAC,IAAD,mCACA,SAAC,IAAD,KACA,UAAC,IAAD,CAAWa,GAAI,EAAf,WACE,UAAC,KAAD,YACE,SAAC,IAAD,oBACA,SAAC,EAAAC,EAAD,CACEC,YAAY,OACZC,KAAK,OACLZ,KAAK,OACLa,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRR,MAAOP,EACPgB,SAAUZ,QAId,UAAC,KAAD,CAAaa,GAAI,EAAjB,WACE,SAAC,IAAD,sBACA,SAAC,EAAAP,EAAD,CACEC,YAAY,SACZC,KAAK,MACLZ,KAAK,SACLa,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRR,MAAOL,EACPc,SAAUZ,WAKhB,UAAC,IAAD,YACE,SAAC,IAAD,CAAQc,YAAY,OAAOC,GAAI,EAAGC,QApDrB,SAAAf,GACnBA,EAAEgB,iBAIFxB,EAAYQ,EAFO,CAAEL,KAAAA,EAAME,OAAAA,IAI3BM,GACD,EA4CO,mBAGA,SAAC,IAAD,CAAQY,QAASxB,EAAjB,4BAKT,E,mBCrEY0B,GAzBOC,EAAAA,GAAAA,KAAH,uHAQIA,EAAAA,GAAAA,MAAH,6FAMGA,EAAAA,GAAAA,MAAH,iNAWIA,EAAAA,GAAAA,OAAH,8LCrBNC,EAAgB,WAC3B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAoCC,EAAAA,EAAAA,KAA5BhC,EAAR,EAAQA,OAAQiC,EAAhB,EAAgBA,OAAQhC,EAAxB,EAAwBA,QAUxB,OACE,iCACE,SAAC0B,EAAD,CAAQV,KAAK,SAASQ,QAASQ,EAA/B,0BAGA,SAAClC,EAAD,CACEC,OAAQA,EACRC,QAASA,EACTC,WAhBa,SAACQ,EAAGwB,GACrBxB,EAAEgB,iBAEFI,GAASK,EAAAA,EAAAA,IAAWD,IAEpBjC,GACD,MAcF,EC9BYmC,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAAnB,EAIrBC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,ECFzBC,EAAiBd,EAAAA,GAAAA,IAAH,qJASde,EAAOf,EAAAA,GAAAA,EAAH,+DAKJD,EAASC,EAAAA,GAAAA,OAAH,kNCVNgB,EAAU,SAAC,GAAiB,IAAfzC,EAAc,EAAdA,QAClB2B,GAAWC,EAAAA,EAAAA,MAEjB,GAAoCC,EAAAA,EAAAA,KAA5BhC,EAAR,EAAQA,OAAQiC,EAAhB,EAAgBA,OAAQhC,EAAxB,EAAwBA,QAUxB,OACE,UAACyC,EAAD,YACE,UAACC,EAAD,WACGxC,EAAQE,KADX,KACmBF,EAAQI,WAE3B,SAAC,EAAD,CAAQkB,QAASQ,EAAjB,mBACA,SAAC,EAAD,CAAQhB,KAAK,SAASQ,QAjBL,kBAAMK,GAASe,EAAAA,EAAAA,IAAc1C,EAAQ2C,IAArC,EAiBjB,qBAGA,SAAC/C,EAAD,CACEC,OAAQA,EACRC,QAASA,EACTC,WApBa,SAACQ,EAAGqC,GACrBrC,EAAEgB,iBAEFI,GAASkB,EAAAA,EAAAA,IAAc7C,EAAQ2C,KAE/B7C,GACD,EAeKE,QAASA,MAIhB,EClCY8C,EAAOrB,EAAAA,GAAAA,GAAH,8ICGJsB,EAAc,WACzB,IAAMZ,GAAWa,EAAAA,EAAAA,IAAYX,GAE7B,OACE,SAACS,EAAD,UACGX,EAASc,KAAI,SAACjD,GAAD,OACZ,yBACE,SAACyC,EAAD,CAASzC,QAASA,KADXA,EAAQ2C,GADL,KAOnB,ECOD,EAjBiB,WACf,IAAMhB,GAAWC,EAAAA,EAAAA,MACXsB,GAAYF,EAAAA,EAAAA,IAAYf,GAM9B,OAJAkB,EAAAA,EAAAA,YAAU,WACRxB,GAASyB,EAAAA,EAAAA,MACV,GAAE,CAACzB,KAGF,iCACE,SAACD,EAAD,KACA,yBAAMwB,GAAa,4BACnB,SAACH,EAAD,MAGL,C","sources":["components/ModalWindow/ModalWindow.jsx","components/ContactEditor/ContactEditor.styled.js","components/ContactEditor/ContactEditor.jsx","redux/contacts/selectors.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { useState } from 'react';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n} from '@chakra-ui/react';\n\nexport const ModalWindow = ({ isOpen, onClose, getContact, contact }) => {\n  const [name, setName] = useState(contact?.name ?? '');\n  const [number, setNumber] = useState(contact?.number ?? '');\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = { name, number };\n\n    getContact( e , newContact);\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Create your account</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody pb={6}>\n          <FormControl>\n            <FormLabel>Name</FormLabel>\n            <Input\n              placeholder=\"Name\"\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              value={name}\n              onChange={handleInputChange}\n            />\n          </FormControl>\n\n          <FormControl mt={4}>\n            <FormLabel>Number</FormLabel>\n            <Input\n              placeholder=\"Number\"\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              value={number}\n              onChange={handleInputChange}\n            />\n          </FormControl>\n        </ModalBody>\n\n        <ModalFooter>\n          <Button colorScheme=\"blue\" mr={3} onClick={handleSubmit}>\n            Save\n          </Button>\n          <Button onClick={onClose}>Cancel</Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-bottom: 12px;\n`;\n\nexport const Lable = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n\nexport const Input = styled.input`\n  flex-grow: 1;\n  padding: 8px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  font: inherit;\n  line-height: 16px;\n  letter-spacing: 0.01em;\n  resize: none;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  outline: none;\n  padding: 10px 10px;\n  border-radius: 4px;\n  background-color: #3f51b5;\n  color: #fff;\n`;\n","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { useDisclosure } from '@chakra-ui/react';\nimport { ModalWindow } from 'components/ModalWindow/ModalWindow';\nimport { Button } from './ContactEditor.styled';\n\nexport const ContactEditor = () => {\n  const dispatch = useDispatch();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const getContact = (e, newContact) => {\n    e.preventDefault();\n\n    dispatch(addContact(newContact));\n\n    onClose();\n  };\n\n  return (\n    <>\n      <Button type=\"button\" onClick={onOpen}>\n        Add contact\n      </Button>\n      <ModalWindow\n        isOpen={isOpen}\n        onClose={onClose}\n        getContact={getContact}\n      />\n    </>\n  );\n};\n","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;","import styled from \"styled-components\";\n\nexport const WrapperContact = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 4px;\n  border: 1px solid #2a2a2a;\n  border-radius: 4px;\n`;\n\nexport const Text = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  outline: none;\n  margin-left: auto;\n  border-radius: 4px;\n  padding: 8px 12px;\n  background-color: #3f51b5;\n  color: #fff;\n`;","import { useDisclosure } from '@chakra-ui/react';\nimport { ModalWindow } from 'components/ModalWindow/ModalWindow';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact, updateContact } from 'redux/contacts/operations';\nimport { Button, Text, WrapperContact } from './Contact.styled';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const getContact = (e, editedContact) => {\n    e.preventDefault();\n\n    dispatch(updateContact(contact.id));\n\n    onClose();\n  };\n\n  return (\n    <WrapperContact>\n      <Text>\n        {contact.name}: {contact.number}\n      </Text>\n      <Button onClick={onOpen}>Edit</Button>\n      <Button type=\"button\" onClick={handleDelete}>\n        Delete\n      </Button>\n      <ModalWindow\n        isOpen={isOpen}\n        onClose={onClose}\n        getContact={getContact}\n        contact={contact}\n      />\n    </WrapperContact>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 12px;\n`;","import { useSelector } from 'react-redux';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { Contact } from 'components/Contact/Contact';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectAllContacts);\n\n  return (\n    <List>\n      {contacts.map((contact) => (\n        <li key={contact.id}>\n          <Contact contact={contact} />\n        </li>\n      ))}\n    </List>\n  );\n};\n","import { ContactEditor } from \"components/ContactEditor/ContactEditor\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectLoading } from \"redux/contacts/selectors\";\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;"],"names":["ModalWindow","isOpen","onClose","getContact","contact","useState","name","setName","number","setNumber","handleInputChange","e","target","value","resetForm","pb","I","placeholder","type","pattern","title","required","onChange","mt","colorScheme","mr","onClick","preventDefault","Button","styled","ContactEditor","dispatch","useDispatch","useDisclosure","onOpen","newContact","addContact","selectLoading","state","contacts","loading","selectAllContacts","items","WrapperContact","Text","Contact","deleteContact","id","editedContact","updateContact","List","ContactList","useSelector","map","isLoading","useEffect","fetchContacts"],"sourceRoot":""}